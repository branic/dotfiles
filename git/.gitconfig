[include]
	path = ~/.gitconfig-local
[diff]
	tool = meld
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
[merge]
	tool = meld
	conflictstyle = zdiff3
[difftool]
	prompt = false
[core]
	pager = less -FiXR
	excludesfile = ~/.gitignore-global
	# abbrev = 8
[pull]
	rebase = true
[push]
	default = simple
	autoSetupRemote = true
	followTags = true
[fetch]
	prune = true
	pruneTags = true
	all = true
[color]
	ui = auto
	status = auto
[log]
	decorate = short
[color "status"]
	added = blue
	updated = cyan
	changed = yellow
	untracked = red
[alias]
	hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
	tree = log --pretty=oneline --abbrev-commit --graph --decorate
	graph = log --graph --oneline --decorate
	graph-all = log --graph --oneline --decorate --branches='*'
    logline = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
	showtool = "!showci () { rev=${1:-HEAD}; git difftool $rev~1 $rev; }; showci $1"
	pr-origin = "!f(){ git checkout $(git remote show origin | grep 'HEAD branch' | awk '{print $3}') ; git branch -D pull/${1} ; git fetch origin pull/${1}/head:pull/${1} ; git checkout pull/${1}; }; f"
	pr = "!f(){ git checkout $(git remote show upstream | grep 'HEAD branch' | awk '{print $3}') ; git branch -D pull/${1} ; git fetch upstream pull/${1}/head:pull/${1} ; git checkout pull/${1}; }; f"
	mr = "!f(){ git checkout $(git remote show upstream | grep 'HEAD branch' | awk '{print $3}') ; git branch -D merge/${1} ; git fetch upstream merge-requests/${1}/head:merge/${1} ; git checkout merge/${1}; }; f" 
	# mr = !sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2 && git checkout mr-$1-$2' -
	commend = commit --amend --no-edit
	st = status
	co = checkout
[init]
	defaultBranch = main
	templateDir = ~/.git-template
[commit]
	gpgsign = true
	verbose = true
[pager]
	stash = false
[grep]
	lineNumber = true
	extendedRegexp = true
[rh-pre-commit]
	checkSecrets = true
	enableLocalConfig = true
[column]
	ui = auto
[branch]
	sort = -committerdate
[tag]
	sort = version:refname
[help]
	autocorrect = prompt
[rebase]
	autoSquash = true
	autoStash = true
	updateRefs = true
[rerere]
	enabled = true
	autoupdate = true
